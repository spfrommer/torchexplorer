{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "A basic stacked area chart example.",
  "width": 500,
  "height": 200,
  "padding": 5,
  "data": [
    {
      "name": "table",
      "values": [
        {"x_index": 0, "y_index": 0, "bin_count": 4},
        {"x_index": 0, "y_index": 1, "bin_count": 12},
        {"x_index": 0, "y_index": 2, "bin_count": 3},
        {"x_index": 0, "y_index": 3, "bin_count": 0},
        {"x_index": 0, "y_index": 4, "bin_count": 0},
        {"x_index": 0, "y_index": 5, "bin_count": 1},

        {"x_index": 1, "y_index": 0, "bin_count": 4},
        {"x_index": 1, "y_index": 1, "bin_count": 20},
        {"x_index": 1, "y_index": 2, "bin_count": 3},
        {"x_index": 1, "y_index": 3, "bin_count": 0},
        {"x_index": 1, "y_index": 4, "bin_count": 0},
        {"x_index": 1, "y_index": 5, "bin_count": 1}
      ],
      "transform": [
        {
          "type": "identifier",
          "as": "id"
        }
      ]
    },
    {
      "name": "table_paired",
      "source": "table",
      "transform": [
        {
          "type": "formula",
          "as": "next_id",
          "expr": "datum.id+1"
        },
        {
          "type": "lookup",
          "from": "table",
          "key": "id",
          "fields": ["next_id"],
          "values": ["bin_count", "y_index"],
          "as": ["next_bin_count", "next_y_index"],
          "default": null
        },
        {
          "type": "joinaggregate",
          "fields": ["bin_count"],
          "ops": ["max"],
          "as": ["max_bin_count"]
        },
        {
          "type": "formula",
          "as": "next_bin_count",
          "expr": "if(datum.next_y_index < datum.y_index, null, datum.next_bin_count)"
        },
        {
          "type": "formula",
          "as": "next_y_index",
          "expr": "if(datum.next_y_index < datum.y_index, null, datum.next_y_index)"
        },
        {
          "type": "formula",
          "as": "next_y_index",
          "expr": "if(datum.next_y_index == null, datum.y_index+0.5, datum.next_y_index)"
        },
        {
          "type": "formula",
          "as": "next_bin_count",
          "expr": "if(datum.next_bin_count == null, datum.bin_count, datum.next_bin_count)"
        }
      ]
    },
    {
      "name": "table_start",
      "source": "table_paired",
      "transform": [
        {
          "type": "filter",
          "expr": "datum.y_index == 0"
        },
        {
          "type": "formula",
          "as": "next_bin_count",
          "expr": "datum.bin_count"
        },
        {
          "type": "formula",
          "as": "next_y_index",
          "expr": "0"
        },
        {
          "type": "formula",
          "as": "y_index",
          "expr": "-0.5"
        }
      ]
    },
    {
      "name": "table_render",
      "source": ["table_paired", "table_start"],
      "transform": [
        {
          "type": "formula",
          "as": "next_x_index",
          "expr": "datum.x_index + 1"
        }
      ]
    }
  ],
  "scales": [
    {
      "name": "x",
      "type": "linear",
      "range": "width",
      "domain": {"data": "table_render", "fields": ["x_index", "next_x_index"]}
    },
    {
      "name": "y",
      "type": "linear",
      "range": "height",
      "domain": {"data": "table_render", "fields": ["y_index", "next_y_index"]}
    },
    {
      "name": "color_base",
      "domain": [0, 1],
      "range": {"scheme": ["rgb(200, 200, 200)", "red"]}
    }
  ],
  "axes": [
    {"orient": "bottom", "scale": "x", "zindex": 1},
    {"orient": "left", "scale": "y", "zindex": 1}
  ],
  "marks": [
    {
      "type": "group",
      "from": {
        "data": "table_render"
      },
      "scales": [
        {
          "name": "color_inner",
          "type": "sequential",
          "range": {"signal": "[if(parent.next_bin_count > 0, scale('color_base', parent.next_bin_count / parent.max_bin_count), 'white'), if(parent.bin_count > 0, scale('color_base', parent.bin_count / parent.max_bin_count), 'white')]"}
        }
      ],
      "marks": [
        {
          "type": "rect",
          "encode": {
            "enter": {
              "x": {"scale": "x", "signal": "parent.x_index"},
              "x2": {"scale": "x", "signal": "parent.next_x_index"},
              "y": {"scale": "y", "signal": "parent.y_index"},
              "y2": {"scale": "y", "signal": "parent.next_y_index + 0.01"},
              "fill": {"signal": "gradient('color_inner', [0, 0], [0, 1])"}
            }
          }
        }
      ]
    }
  ]
}
